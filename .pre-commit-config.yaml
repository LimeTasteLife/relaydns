# Pre-commit hooks for Go project
# Install: pip install pre-commit && pre-commit install
# Run manually: pre-commit run --all-files
# Update hooks: pre-commit autoupdate

repos:
  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0
    hooks:
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
      - id: end-of-file-fixer
      - id: check-yaml
        args: [--allow-multiple-documents]
      - id: check-added-large-files
        args: [--maxkb=1024]
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: mixed-line-ending
        args: [--fix=lf]
      - id: detect-private-key

  # YAML linting
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.37.1
    hooks:
      - id: yamllint
        args: [-c=.yamllint.yml]
        exclude: ^(vendor/|\.github/)

  # Local checks (formatting, go vet, mod tidy, build, test)
  - repo: local
    hooks:
      - id: golangci-lint-run
        name: golangci-lint run
        description: Run golangci-lint to analyze Go code
        entry: golangci-lint run
        language: system
        pass_filenames: false
        types: [go]

      - id: golangci-lint-fmt
        name: golangci-lint fmt
        description: Format Go code using golangci-lint
        entry: golangci-lint fmt
        language: system
        pass_filenames: false
        types: [go]

      - id: go-vet
        name: go vet
        description: Run 'go vet' to examine Go source code
        entry: go vet
        language: system
        pass_filenames: false
        types: [go]
        args: [./...]

      - id: go-mod-tidy
        name: go mod tidy
        description: Run 'go mod tidy' to ensure go.mod matches source
        entry: bash -c 'go mod tidy && git diff --exit-code go.mod go.sum'
        language: system
        pass_filenames: false
        always_run: true

      - id: go-build
        name: go build
        description: Build all Go binaries to ensure they compile
        entry: bash -c 'go build -trimpath -o /tmp/relaydns-server ./cmd/server && go build -trimpath -o /tmp/relaydns-client ./cmd/example_http_client && go build -trimpath -o /tmp/relaydns-chat ./cmd/example_chat'
        language: system
        pass_filenames: false
        types: [go]

      - id: go-test
        name: go test
        description: Run unit tests with race detector
        entry: go test
        language: system
        pass_filenames: false
        types: [go]
        args: [-v, -race, -timeout=3m, ./...]
